// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Color = require("./Color.bs.js");
var ElementRe = require("bs-webapi/src/dom/nodes/ElementRe.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");

var tooltip = Css.style(/* :: */[
      Css.visibility(Css.hidden),
      /* :: */[
        Css.zIndex(2),
        /* :: */[
          Css.backgroundColor(Css.black),
          /* :: */[
            Css.opacity(0.8),
            /* [] */0
          ]
        ]
      ]
    ]);

var raa = Css.style(/* :: */[
      Css.marginLeft(Css.px(8)),
      /* :: */[
        Css.height(Css.px(20)),
        /* :: */[
          Css.fontWeight(400),
          /* :: */[
            Css.maxWidth(Css.px(255)),
            /* :: */[
              Css.borderRadius(Css.px(4)),
              /* :: */[
                Css.alignItems(Css.center),
                /* :: */[
                  Css.textAlign(Css.center),
                  /* :: */[
                    Css.padding2(Css.px(0), Css.px(8)),
                    /* :: */[
                      Css.important(Css.color(Css.white)),
                      /* :: */[
                        Css.fontSize(Css.px(11)),
                        /* :: */[
                          Css.selector(":hover ." + tooltip, /* :: */[
                                Css.visibility(Css.visible),
                                /* [] */0
                              ]),
                          /* :: */[
                            Css.selector("& ." + tooltip, /* :: */[
                                  Css.position(Css.absolute),
                                  /* :: */[
                                    Css.padding2(Css.px(2), Css.px(8)),
                                    /* :: */[
                                      Css.height(Css.px(16)),
                                      /* :: */[
                                        Css.width(Css.px(50)),
                                        /* :: */[
                                          Css.pointerEvents(Css.none),
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ]),
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var Styles = /* module */[
  /* tooltip */tooltip,
  /* raa */raa
];

function getUsernameToElementArrayDict() {
  return Array.prototype.slice.call(document.querySelectorAll(".author:not(.raa-dirty)")).reduce((function (dict, node) {
                var username = node.innerText;
                var match = dict[username];
                if (match !== undefined) {
                  match.push(node);
                } else {
                  dict[username] = /* array */[node];
                }
                return dict;
              }), { });
}

function getAccountAge(user) {
  var delta = Date.now() / 1000.0 - user[/* created_utc */1];
  var years = Math.floor(delta / 31536000.0);
  var days = Math.floor((delta - years * 365.0 * 86400.0) / 86400.0);
  return /* tuple */[
          years | 0,
          days | 0
        ];
}

function getBadgeInnerText(param) {
  var days = param[1];
  var years = param[0];
  var match = years < 1;
  var match$1 = days < 180;
  if (match) {
    return "" + (String(days) + "d");
  } else if (match$1) {
    return "" + (String(years) + "y");
  } else {
    return "" + (String(years) + ".5y");
  }
}

function createTooltip(param) {
  var tooltip$1 = document.createElement("span");
  tooltip$1.className = "" + (String(raa) + (" " + (String(tooltip) + "")));
  tooltip$1.innerText = "" + (String(param[0]) + ("y " + (String(param[1]) + "d")));
  return tooltip$1;
}

function createElement(user) {
  var age = getAccountAge(user);
  var ele = document.createElement("span");
  var color = Color.getColor(age);
  ele.className = "" + (String(raa) + (" " + (String(color) + "")));
  ele.innerText = getBadgeInnerText(age);
  ele.appendChild(createTooltip(age));
  return ele;
}

function addDirtyClassName(node) {
  var match = ElementRe.ofNode(node);
  if (match) {
    var ele = match[0];
    ele.className = ele.className + " raa-dirty";
    return /* () */0;
  } else {
    return /* () */0;
  }
}

function insertElement(authorNode, user) {
  addDirtyClassName(authorNode);
  var badge = createElement(user);
  var parent = Js_option.getExn(Js_primitive.null_undefined_to_opt(authorNode.parentElement));
  var nextSibling = Js_null_undefined.fromOption(Js_primitive.null_undefined_to_opt(authorNode.nextSibling));
  parent.insertBefore(badge, nextSibling);
  return /* () */0;
}

exports.Styles = Styles;
exports.getUsernameToElementArrayDict = getUsernameToElementArrayDict;
exports.getAccountAge = getAccountAge;
exports.getBadgeInnerText = getBadgeInnerText;
exports.createTooltip = createTooltip;
exports.createElement = createElement;
exports.addDirtyClassName = addDirtyClassName;
exports.insertElement = insertElement;
/* tooltip Not a pure module */
